apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "webhook-demo.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "webhook-demo.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "webhook-demo.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "webhook-demo.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "webhook-demo.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      # initContainers:
      #   - name: webhook-init
      #     image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
      #     imagePullPolicy: {{ .Values.image.pullPolicy }}
      #     command: ['/usr/local/bin/initc']
      #     env:
      #       - name: MUTATE_CONFIG
      #         value: "{{ include "webhook-demo.fullname" . }}-mutating-config"
      #       - name: WEBHOOK_SERVICE
      #         value: {{ include "webhook-demo.fullname" . }}
      #       - name: WEBHOOK_NAMESPACE
      #         valueFrom:
      #           fieldRef:
      #             fieldPath: metadata.namespace
      #     volumeMounts:
      #       - name: certs
      #         mountPath: /var/run/certs
      #         readOnly: true
      containers:
        - name: webhook-server
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['/usr/local/bin/webhook']
          ports:
            - name: webhook-api
              containerPort: 8443
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: certs
            mountPath: /var/run/certs
            readOnly: true
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      - name: certs
        secret:
          secretName: {{ template "webhook-demo.name" . }}-certs
